/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TestToken2, TestToken2Interface } from "../TestToken2";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "tokenOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokens",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokens",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "delegate",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegate",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "numTokens",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenOwner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegate",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "numTokens",
        type: "uint256",
      },
    ],
    name: "increaseApproval",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "numTokens",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "numTokens",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c0604052600a6080819052694552433230426173696360b01b60a090815261002b91600091906100da565b506040805180820190915260038082526242534360e81b6020909201918252610056916001916100da565b5034801561006357600080fd5b50604080518082019091526006808252652a37b5b2b71960d11b6020909201918252610091916000916100da565b50604080518082019091526002808252612a1960f11b60209092019182526100bb916001916100da565b50620186a060048190553360009081526002602052604090205561017b565b828054600181600116156101000203166002900490600052602060002090601f0160209004810192826101105760008555610156565b82601f1061012957805160ff1916838001178555610156565b82800160010185558215610156579182015b8281111561015657825182559160200191906001019061013b565b50610162929150610166565b5090565b5b808211156101625760008155600101610167565b6109328061018a6000396000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c806370a082311161008c578063b09f126611610066578063b09f126614610271578063d28d885214610279578063d73dd62314610281578063dd62ed3e146102ad576100df565b806370a082311461021757806395d89b411461023d578063a9059cbb14610245576100df565b806323b872dd116100bd57806323b872dd146101bb578063313ce567146101f157806332424aa31461020f576100df565b806306fdde03146100e4578063095ea7b31461016157806318160ddd146101a1575b600080fd5b6100ec6102db565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561012657818101518382015260200161010e565b50505050905090810190601f1680156101535780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61018d6004803603604081101561017757600080fd5b506001600160a01b038135169060200135610371565b604080519115158252519081900360200190f35b6101a96103d7565b60408051918252519081900360200190f35b61018d600480360360608110156101d157600080fd5b506001600160a01b038135811691602081013590911690604001356103dd565b6101f96105bb565b6040805160ff9092168252519081900360200190f35b6101f96105c0565b6101a96004803603602081101561022d57600080fd5b50356001600160a01b03166105c5565b6100ec6105e0565b61018d6004803603604081101561025b57600080fd5b506001600160a01b038135169060200135610640565b6100ec610732565b6100ec6107bf565b61018d6004803603604081101561029757600080fd5b506001600160a01b03813516906020013561081a565b6101a9600480360360408110156102c357600080fd5b506001600160a01b0381358116916020013516610885565b60008054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103675780601f1061033c57610100808354040283529160200191610367565b820191906000526020600020905b81548152906001019060200180831161034a57829003601f168201915b5050505050905090565b3360008181526003602090815260408083206001600160a01b038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b60045490565b6001600160a01b03831660009081526002602052604081205482111561044a576040805162461bcd60e51b815260206004820152601460248201527f42616c616e636520697320746f6f20736d616c6c000000000000000000000000604482015290519081900360640190fd5b6001600160a01b03841660009081526003602090815260408083203384529091529020548211156104c2576040805162461bcd60e51b815260206004820152601560248201527f417070726f76616c20697320746f6f20736d616c6c0000000000000000000000604482015290519081900360640190fd5b6001600160a01b0384166000908152600260205260409020546104e590836108b0565b6001600160a01b038516600090815260026020908152604080832093909355600381528282203383529052205461051c90836108b0565b6001600160a01b03808616600090815260036020908152604080832033845282528083209490945591861681526002909152205461055a90836108c2565b6001600160a01b0380851660008181526002602090815260409182902094909455805186815290519193928816927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a35060019392505050565b601290565b601281565b6001600160a01b031660009081526002602052604090205490565b60018054604080516020601f600260001961010087891615020190951694909404938401819004810282018101909252828152606093909290918301828280156103675780601f1061033c57610100808354040283529160200191610367565b3360009081526002602052604081205482111561068e5760405162461bcd60e51b81526004018080602001828103825260248152602001806108d96024913960400191505060405180910390fd5b336000908152600260205260409020546106a890836108b0565b33600090815260026020526040808220929092556001600160a01b038516815220546106d490836108c2565b6001600160a01b0384166000818152600260209081526040918290209390935580518581529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a350600192915050565b60018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156107b75780601f1061078c576101008083540402835291602001916107b7565b820191906000526020600020905b81548152906001019060200180831161079a57829003601f168201915b505050505081565b6000805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156107b75780601f1061078c576101008083540402835291602001916107b7565b3360008181526003602090815260408083206001600160a01b0387168085529083528184208054870190819055825190815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b6001600160a01b03918216600090815260036020908152604080832093909416825291909152205490565b6000828211156108bc57fe5b50900390565b6000828201838110156108d157fe5b939250505056fe4e6f7420656e6f75676820746f6b656e7320746f206d616b652061207472616e73666572a26469706673582212203142c1218cbc538d7fc13c2f871498fbdf3dcc58d3383b60ffe9fcf64a281e1564736f6c63430007050033";

type TestToken2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestToken2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestToken2__factory extends ContractFactory {
  constructor(...args: TestToken2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestToken2> {
    return super.deploy(overrides || {}) as Promise<TestToken2>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TestToken2 {
    return super.attach(address) as TestToken2;
  }
  connect(signer: Signer): TestToken2__factory {
    return super.connect(signer) as TestToken2__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestToken2Interface {
    return new utils.Interface(_abi) as TestToken2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestToken2 {
    return new Contract(address, _abi, signerOrProvider) as TestToken2;
  }
}
